<source>
  @type forward
  @log_level trace
  port 24224
  bind 0.0.0.0
</source>

<filter **>
  @type record_transformer
  <record>
    appName "#{ENV['CLOUD_APP']}"
    environment "#{ENV['CLOUD_ENVIRONMENT']}"
    stack horizon
  </record>
</filter>


<filter **>
  @type parser
  key_name "log"
  emit_invalid_record_to_error false
  reserve_data true
  <parse>
    @type json
  </parse>
</filter>

<match **>
  @type forward
  @log_level debug
  compress gzip

  #TLS https://docs.fluentd.org/output/forward#how-to-connect-to-a-tls-ssl-enabled-server
  transport           tls
  tls_cert_path       /fluentd/etc/certs/fluentd.crt # path to crt file from docker-compose env file
  tls_verify_hostname false           # Set false to ignore cert hostname

  <server>
    host               "#{ENV['FLUENTD_AGGREGATOR_HOST']}"
    port               "#{ENV['FLUENTD_AGGREGATOR_PORT']}"
    username           "#{ENV['FLUENTD_AGGREGATOR_USER']}"
    password           "#{ENV['FLUENTD_AGGREGATOR_PASS']}"
  </server>

  <security>
    self_hostname    docker-compose-"#{ENV['CLOUD_APP']}"
    shared_key       "#{ENV['FLUENTD_AUTH_KEY']}"
  </security>

  slow_flush_log_threshold 60.0

  <buffer>
    @type               file
    path                /fluentd/log/fluentd-agent/fluentd-buffer/forwarder.*.buffer
    chunk_limit_size    8MB
    total_limit_size    1024MB
    flush_at_shutdown   true
    flush_mode          interval
    flush_interval      5
    #flush_thread_count  1
    overflow_action     block
    retry_timeout       4h
    retry_max_interval  90
    retry_wait 1                      # The wait interval for the first retry.
    retry_exponential_backoff_base 2  # Increase the wait time by a factor of N.
    retry_type exponential_backoff    # Set 'periodic' for constant intervals.
  </buffer>
</match>
